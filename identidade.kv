# -*- coding: utf-8 -*-
#:import Clock kivy.clock.Clock
Manager:
    Menu:
        name: 'menu'
    Game:
        name: 'game'
    GameOver:
        name: 'game_over'
    Pause:
        name: 'pause'
    Setting:
        name: 'setting'

<Menu>:
    MDBoxLayout:
        orientation: 'vertical'
        Widget
        MDBoxLayout:
            padding: '10dp'
            spacing: '30dp'
            orientation: 'vertical'
            MDLabel:
                text: 'Identidade'
                halign: 'center'
                font_style: 'H2'
                theme_text_color: "Custom"
                text_color: app.theme_cls.primary_color
            Widget
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Começar'
                on_release: app.root.current = 'game'
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Como Jogar?'
                on_release:
                    app.tutorial = True
                    app.root.current = 'game'
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Configurações'
                on_release: app.root.current = 'setting'

<Player>:
    canvas:
        Color:
            rgba: app.theme_cls.primary_color
        Ellipse:
            size: self.size
            pos: self.pos

<Game>:
    spf: 1 / app.settings['fps']
    height_gap: 0 if app.tutorial else self.height / 5
    game_height: self.height if app.tutorial else self.height_gap + self.height
    width_gap: 0 if app.tutorial else self.width / 5
    game_width: self.width if app.tutorial else self.width_gap + self.width
    score_label: 'Placar: ' + str(int(self.score))
    level_label: 'Nível: ' + str(int(self.level))
    status: self.level * 10 + self.score - self.loses
    MDBoxLayout:
        orientation: 'vertical'
        Widget
        MDBoxLayout:
            padding: '10dp'
            spacing: '30dp'
            orientation: 'vertical'
            MDLabel:
                text: str(int(root.status))  # if app.tutorial else root.score_label
                theme_text_color: "Custom"
                text_color: app.theme_cls.error_color if root.status < 0 else app.theme_cls.text_color
                halign: 'center'
                font_style: 'H3'
            MDLabel:
                text: root.message if app.tutorial else ''  # root.level_label
                halign: 'center'
                font_style: 'Subtitle1'
        Widget:
            size_hint_y: 3  # 1 if app.tutorial else 3
    MDFloatLayout:
        Player:
            size_hint: None, None
            size_parameter: min(root.height, root.width) / 15
            size: self.size_parameter, self.size_parameter
            x: root.width * 0.9
            y: root.height / 20

<GameOver>:
    MDBoxLayout:
        orientation: 'vertical'
        Widget
        MDBoxLayout:
            padding: '10dp'
            spacing: '30dp'
            orientation: 'vertical'
            MDLabel:
                text: 'Fim de Jogo'
                halign: 'center'
                font_style: 'H2'
                theme_text_color: "Custom"
                text_color: app.theme_cls.error_color
            MDLabel:
                text: 'Maior pontuação: ' + str(int(app.settings['high_status']))
                halign: 'center'
                font_style: 'Subtitle1'
                theme_text_color: "Custom"
                text_color: app.theme_cls.accent_color
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Tentar de novo'
                on_release: app.root.current = 'game'
                text_color: app.theme_cls.accent_color
                line_color: app.theme_cls.accent_color
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Menu'
                on_release: app.root.current = 'menu'
                text_color: app.theme_cls.accent_color
                line_color: app.theme_cls.accent_color
        Widget

<Pause>:
    MDBoxLayout:
        orientation: 'vertical'
        Widget
        MDBoxLayout:
            padding: '10dp'
            spacing: '30dp'
            orientation: 'vertical'
            MDLabel:
                id: title
                halign: 'center'
                font_style: 'H2'
                theme_text_color: "Custom"
            MDLabel:
                id: subtitle
                halign: 'center'
                font_style: 'Subtitle1'
                theme_text_color: "Custom"
                text_color: app.theme_cls.primary_color
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Ver tutorial de novo' if app.tutorial else 'Continuar'
                on_release: app.root.current = 'game'
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'center'
            MDRectangleFlatButton:
                text: 'Menu'
                on_release: app.root.current = 'menu'
        Widget

<Setting>:
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'bottom'
        MDProgressBar:
            id: progress
            type: "determinate"
            running_duration: .3
            catching_duration: 1
            size_hint_y: .1
    MDBoxLayout:
        orientation: 'vertical'
        MDBoxLayout:
            MDLabel:
                text: 'Volume'
                halign: 'center'
                size_hint_x: 1/3
            MDSlider:
                value: app.settings['volume']
                on_value:
                    app.settings['volume'] = self.value
                    app.music.volume = self.value / 100
            MDIconButton:
                icon: 'reload'
                pos_hint: {'center_x': .5, 'center_y': .5}
                on_release: app.to_default('volume')
        MDBoxLayout:
            MDLabel:
                text: 'FPS'
                halign: 'center'
                size_hint_x: 1/3
            MDSlider:
                value: app.settings['fps']
                on_value: app.settings['fps'] = self.value
                min: 15
                max: 90
            MDIconButton:
                icon: 'reload'
                pos_hint: {'center_x': .5, 'center_y': .5}
                on_release: app.to_default('fps')
        MDBoxLayout:
            MDLabel:
                text: 'Tema Escuro'
                halign: 'center'
                size_hint_x: 1/3
            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'center'
                MDSwitch:
                    active: app.settings['theme_style'] == "Dark"
                    on_active: app.settings['theme_style'] = app.theme_cls.theme_style = "Dark" if self.active else "Light"
            MDIconButton:
                icon: 'reload'
                pos_hint: {'center_x': .5, 'center_y': .5}
                on_release: app.to_default('theme_style')
        MDBoxLayout:
            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'center'
                MDRectangleFlatButton:
                    text: 'Voltar ao Menu'
                    on_release: app.root.current = 'menu'
            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'center'
                MDRectangleFlatButton:
                    id: save_button
                    text: 'Salvar'
                    on_release:
                        progress.start()
                        app.save()
                        Clock.schedule_once(lambda *_: progress.stop(), .4)

<Obstacle>:
    color: app.theme_cls.accent_color
    canvas:
        Color:
            rgba: root.color or app.theme_cls.accent_color
        Rectangle:
            size: self.size
            pos: self.pos
    size_hint: None, None
